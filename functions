Fallback function: catch all function used when you dont know how to interact
with the smart contract.

```
 pragma solidity ^0.5.13;

 contract MyContract {
    mapping(address => uint) public balanceReceived;

    function receiveMoney() public payable {
        balanceReceived[msg.sender] += msg.value;
    }
    function withdrawMoney(address payable _to, uint _amount) public {
        require(_amount <= balanceReceived[msg.sender], "not enough funds");
        assert(balancedReceived[msg.sender] >= balancedReceived[msg.sender] - _amount);

        balancedReceived[msg.sender] -= _amount;
        _to.transfer(_amount);
    }
    // fallback.
    function () external payable {
        receiveMoney();
    }
 }
```
